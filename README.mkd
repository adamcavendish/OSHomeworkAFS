# PROJECT: OSHomeworkAFS
==========

# Dependencies:
* boost
* GCC-4.8
* cmake

# How to build:

```
mkdir build/
cd build/
cmake ..
make -j4
```

# Usage example:
* first create a filesystem:

```
./afs_createfs ./myfs.fs 102400 100
```

* Then you have `/`, `/home`, `/etc`, `/tmp`, `/etc/passwd` in the filesystem by default
* Default users: `root` and `guest`

* You can use `afs_ls` to see files/directories in a directory:

```
./afs_ls ./myfs.fs root /

result:
drw root etc
drw root home
drw root tmp

./afs_ls ./myfs.fs root /etc

result:
-rw root passwd
```

* You may read from a file:

```
./afs_read ./myfs.fs root /etc/passwd

result:
root:0
guest:1
```

* You may create a new file:

```
./afs_touch ./myfs.fs root /tmp/testfile 6

./afs_ls ./myfs.fs root /tmp

result:
-rw root testfile
```

* You may write to file (File must exist first)
* *IMPORTANT* `afs_write` read from `STDIN` until EOF

```
./afs_write ./myfs.fs root /tmp/testfile
>> helloworld!

./afs_read ./myfs.fs root /tmp/testfile

result:
helloworld!
```

* You may remove a file

```
./afs_rm ./myfs.fs root /tmp/testfile

./afs_ls ./myfs.fs root /tmp
```

* All other operations please refer to `Documentaion`

# Documentation:
* afs\_interactive:
    * login [user]
    * ls
    * cd [path]
    * chmod [file\_name] [owner] [file\_flag\_number]
    * touch [file\_name] [file\_flag\_number]
    * rm [file\_name]
    * read [file\_name] ([size])
    * write [file\_name]
        * usage: read from stdin, until EOF
    * adduser [username]
    * rmuser [username]
    * help
        * print help
* afs\_createfs:
    * usage: afs\_createfs [afs\_fsfile] [fs\_size] [fs\_block\_size]
* afs\_ls:
    * usage: afs\_ls [afs\_fsfile] [user] [path]
* afs\_chmod:
    * usage: afs\_chmod [afs\_fsfile] [user] [file\_name] [owner] [file\_flag\_number]
* afs\_touch:
    * usage: afs\_touch [afs\_fsfile] [user] [file\_name] [file\_flag\_number]
* afs\_rm:
    * usage: afs\_rm [afs\_fsfile] [user] [file\_name]
* afs\_read:
    * usage: afs\_read [afs\_fsfile] [user] [file\_name] ([size])
    * print to stdout
* afs\_write:
    * usage: afs\_write [afs\_fsfile] [user] [file\_name]
    * read from stdin, until EOF
* afs\_adduser:
    * usage: afs\_adduser [afs\_fsfile] [user] [username]
* afs\_rmuser:
    * usage: afs\_rmuser [afs\_fsfile] [user] [username]

# Important data size:
* block\_address: int16
* blocks\_num: int16
* fd: int32
* fs\_size: int32
* block\_sz: int16
* BlockInfo::usedbytes: uint16

# Recommend:
* fs block size is recommended 64, maximum 32768, minimum 64

# AFS Structure: (sequential)
* FSInfo (block 0)
* Attribute: '/' root dir Attributes (block 1)
* Attribute: '/etc/' etc dir Attributes (block 2)
* Attribute: '/home/' home dir Attributes (block 3)
* Attribute: '/tmp/' tmp dir Attributes (block 4)
* Extra Space: (block 5 - end)

# Impoartant Data Structures:
* BlockInfo (16 bits, 2 bytes)
    * uint16: the number of bytes used

* Attribute (136+32 bits, 21 bytes)
    * int8: flag
    * int8: owner uid
    * INode: index nodes
    * char[15]: node name

* FSInfo (48 bits, 8 bytes)
    * int32: filesystem size
    * int16: filesystem block size

* INode (32 bits)
    * int16: block num (how many blocks used)
    * int16[13]: addresses (0-9 1-time-ref blocks, 10-12 2-time-ref blocks)

